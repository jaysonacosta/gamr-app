import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import { useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";

import Layout from "../components/Layout";
import { useEffect, useState } from "react";

const Home: NextPage = () => {
  const { data: session } = useSession();
  const [existingMessage, setExistingMessage] = useState("");
  const [message, setMessage] = useState("");
  const mutation = trpc.message.updateMessage.useMutation();
  const query = trpc.message.getMessage.useQuery();

  const handleMessageUpdate = () => {
    mutation.mutate({ text: message });

    if (message) {
      setExistingMessage(message);
    }
  };

  useEffect(() => {
    const existingMessage = query.data;

    if (existingMessage) {
      setExistingMessage(existingMessage);
    }
  }, [query.data]);

  return (
    <>
      <Head>
        <title>Gamr.app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {session && (
          <main className="container mx-auto grid grid-cols-3 p-4">
            <div className="col-span-1 flex flex-col">
              <div className="max-h-[296px] max-w-[296px]">
                <Image
                  src={session.user?.image ? session.user.image : ""}
                  height={128}
                  width={128}
                  alt={`${session.user?.name} profile picture.`}
                  className="rounded-full"
                  layout="responsive"
                />
              </div>
              <span className="text-3xl font-extrabold leading-normal">
                {session.user?.name}
              </span>
            </div>
            <div className="col-span-2">
              <p className="text-2xl font-bold leading-normal">Message</p>
              <p className="text-xl font-bold leading-normal">
                {existingMessage.length > 0 && existingMessage}
                {existingMessage.length == 0 && "Update your message!"}
              </p>
              <br />
              <div className="flex flex-col items-start">
                <input
                  className="rounded p-1 text-neutral-900"
                  type="text"
                  onChange={(e) => setMessage(e.target.value)}
                />
                <br />
                <button
                  className="rounded bg-gray-700 p-2"
                  onClick={handleMessageUpdate}
                >
                  Enter
                </button>
              </div>
            </div>
          </main>
        )}

        {!session && <main></main>}
      </Layout>
    </>
  );
};

export default Home;
